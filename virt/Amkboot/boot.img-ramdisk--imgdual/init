#! /bin/sh


mkdir -m 0755 /proc
mount -t proc proc /proc
mkdir -m 0755 /sys
mount -t sysfs sys /sys
mkdir -p /dev

mount -t devtmpfs -o mode=0755,nr_inodes=0 devtmpfs /dev
echo 0 4 1 7 > /proc/sys/kernel/printk




echo "Switching to rootfs..." > /dev/ttyprintk
echo 50 > /sys/devices/virtual/timed_output/vibrator/enable
sleep 0.5
echo 50 > /sys/devices/virtual/timed_output/vibrator/enable
key=`/sbin/evkey -u -t 3000 /dev/input/event2`

if [ "x${key}" != "x" ]; then
    echo "Key with code ${key} pressed, 2nd Boot."
	echo 1 > /sys/devices/platform/omapdss/overlay0/enabled
	echo 100 > /sys/devices/virtual/timed_output/vibrator/enable
	echo 4 4 1 7 > /proc/sys/kernel/printk
	echo "Mounting relevant filesystems ...Done"

	while [ ! -e /sys/block/mmcblk0 ] ; do
	    echo "Waiting for SD Card" > /dev/ttyprintk
	    sleep 1
	done

	partition=mmcblk0p12

	# Try unpartitioned card
	if [ ! -e /sys/block/mmcblk0/$partition ] ; then
	    partition=mmcblk0
	fi

	echo "Mounting sdcard/nand ..." > /dev/ttyprintk
	mkdir -m 0777 /sdcard
	mount -t auto -o rw,noatime,nodiratime /dev/$partition /sdcard
	[ $? -eq 0 ] || fail "Failed to mount the SD card. Cannot continue."
	
	BASE_ANDROID_DIR="/sdcard/media/"

	# Workaround for multi-user functionality in Android 4.2
	if [ -d /sdcard/media/0 ] ; then
	    BASE_ANDROID_DIR="/sdcard/media/0"
	fi

	if [ -e $BASE_ANDROID_DIR/rootfs/installer ] ; then
	    sh $BASE_ANDROID_DIR/rootfs/installer

	    # When we're done with the installation process we're removing the installer script to
	    # not install everything again on next boot
	    rm $BASE_ANDROID_DIR/rootfs/installer
	fi

	mkdir -m 0755 /rfs
	echo "Checking for rootfs image on sdcard/nand ..." > /dev/ttyprintk
	if [ -e $BASE_ANDROID_DIR/rootfs/rootfs.img ] ; then
	    echo "Rootfs image found; mounting it now ..." > /dev/ttyprintk
	    losetup /dev/loop2 $BASE_ANDROID_DIR/rootfs/rootfs.img
	    [ $? -eq 0 ] || fail "Failed to find rootfs.img on SD Card!"
	    e2fsck -y /dev/loop2
	    mount -t ext4 -o noatime,nodiratime,sync,rw /dev/loop2 /rfs
	    mount -o bind /dev /rfs/dev
	    [ $? -eq 0 ] || fail "Failed to mount /rootfs"
	elif [ -d $BASE_ANDROID_DIR/rootfs/rootfs ] ; then
	    echo "Rootfs folder found; chrooting into ..." > /dev/ttyprintk
	    mount -o bind $BASE_ANDROID_DIR/rootfs/rootfs /rfs
    	[ $? -eq 0 ] || fail "Failed to mount /rootfs"
	fi

	mkdir /rfs/data

	mount -o bind /dev /rfs/dev
	mount -o bind /data /rfs/data
	mount -o bind /sys /rfs/sys
	mount -o bind /proc /rfs/proc

	echo "Umount not needed filesystems ..." > /dev/ttyprintk
    echo "Key with code ${key} pressed, 1st Boot."
    exec switch_root /rfs /sbin/init
else
/bin/busybox mkdir /system

sh /bin/sysinfo.sh 10

umount /system
umount -l /proc
umount -l /sys
umount -l /dev
$BB cp /_init /init
sleep 1
/init
fi

